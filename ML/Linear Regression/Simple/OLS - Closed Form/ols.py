# -*- coding: utf-8 -*-
"""ols.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14jpn-v6Y4aZ3a9cdrIyyw9ebnIjA5PcR

## Using sklearn librery
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

placement = pd.read_csv('/content/placement.csv')

placement.head()

plt.scatter(placement['cgpa'], placement['package'])
plt.title('cgpa vs package')
plt.xlabel('cgpa')
plt.ylabel('package(LPA)')

X = placement.iloc[:,0:1]
y = placement.iloc[:,-1]

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=3)

from sklearn.linear_model import LinearRegression

slr = LinearRegression()

slr.fit(X_train, y_train)

m = slr.coef_
b = slr.intercept_
print(m, b)

y_pred = slr.predict(X_test)
y_pred

plt.scatter(placement['cgpa'], placement['package'])
plt.plot(X_train, slr.predict(X_train), color='red')
plt.xlabel('cgpa')
plt.ylabel('package(LPA)')

"""## Implemting OLS"""

class LR:

  def __init__(self):
    self.m = 0
    self.b = 0

  def fit(self, X, y):
    X1 = np.array(X.iloc[:,0])
    y = np.array(y)

    xbar = X1.mean()
    ybar = y.mean()

    num = np.sum((X1-xbar)*(y-ybar))
    dem = np.sum((X1-xbar)**2)

    self.m = num/dem
    self.b = ybar - self.m * xbar
    print(self.m, self.b)

  def predict(self, X):
    X1 = np.array(X.iloc[:,0])
    return self.m * X1 + self.b

lr = LR()
lr.fit(X_train, y_train)

lr.predict(X_test)